From ea886bd949d88eb94a1f539d124a242e361fb899 Mon Sep 17 00:00:00 2001
From: Lukasz Bartosik <lukasz.bartosik@cavium.com>
Date: Thu, 25 Jan 2018 09:58:32 +0100
Subject: [PATCH 291/375] crypto: cpt - fix domain creation when unbind-bind

Fix CPT domain creation failure when the CPT driver is unbound
then bound and a domain is created.

Signed-off-by: Lukasz Bartosik <lukasz.bartosik@cavium.com>
---
 drivers/crypto/cavium/cpt/cptpf.h        |  1 -
 drivers/crypto/cavium/cpt/cptpf_domain.c |  6 +++---
 drivers/crypto/cavium/cpt/cptpf_main.c   | 10 ----------
 3 files changed, 3 insertions(+), 14 deletions(-)

diff --git a/drivers/crypto/cavium/cpt/cptpf.h b/drivers/crypto/cavium/cpt/cptpf.h
index 3ca8bac9fea8..a181693e5e9e 100644
--- a/drivers/crypto/cavium/cpt/cptpf.h
+++ b/drivers/crypto/cavium/cpt/cptpf.h
@@ -55,7 +55,6 @@ struct cpt_device {
 	u8 vfs_enabled; /* Number of enabled VFs */
 	u8 vfs_in_use; /* Number of VFs in use */
 	u32 flags; /* Flags to hold device status bits */
-	int node;
 
 	void __iomem *reg_base; /* Register start address */
 	struct pci_dev *pdev; /* pci device handle */
diff --git a/drivers/crypto/cavium/cpt/cptpf_domain.c b/drivers/crypto/cavium/cpt/cptpf_domain.c
index 61fb8681b788..f28fab8b554b 100644
--- a/drivers/crypto/cavium/cpt/cptpf_domain.c
+++ b/drivers/crypto/cavium/cpt/cptpf_domain.c
@@ -39,7 +39,7 @@ static int cpt_pf_remove_domain(u32 node, u16 domain_id, struct kobject *kobj)
 
 	mutex_lock(&octeontx_cpt_devices_lock);
 	list_for_each_entry(curr, &octeontx_cpt_devices, list) {
-		if (curr->node == node && curr->pf_type == CPT_SE_83XX) {
+		if (curr->pf_type == CPT_SE_83XX) {
 			cpt = curr;
 			break;
 		}
@@ -95,7 +95,7 @@ static int cpt_pf_create_domain(u32 node, u16 domain_id,
 
 	mutex_lock(&octeontx_cpt_devices_lock);
 	list_for_each_entry(curr, &octeontx_cpt_devices, list) {
-		if (curr->node == node && curr->pf_type == CPT_SE_83XX) {
+		if (curr->pf_type == CPT_SE_83XX) {
 			cpt = curr;
 			break;
 		}
@@ -170,7 +170,7 @@ static int cpt_reset_domain(u32 node, u16 domain_id)
 
 	mutex_lock(&octeontx_cpt_devices_lock);
 	list_for_each_entry(curr, &octeontx_cpt_devices, list) {
-		if (curr->node == node && curr->pf_type == CPT_SE_83XX) {
+		if (curr->pf_type == CPT_SE_83XX) {
 			cpt = curr;
 			break;
 		}
diff --git a/drivers/crypto/cavium/cpt/cptpf_main.c b/drivers/crypto/cavium/cpt/cptpf_main.c
index 58fdd39060a8..0ffafbcbda20 100644
--- a/drivers/crypto/cavium/cpt/cptpf_main.c
+++ b/drivers/crypto/cavium/cpt/cptpf_main.c
@@ -20,9 +20,6 @@
 #define DRV_NAME	"thunder-cpt"
 #define DRV_VERSION	"1.0"
 
-static atomic_t cpt_se_count = ATOMIC_INIT(0);
-static atomic_t cpt_ae_count = ATOMIC_INIT(0);
-
 DEFINE_MUTEX(octeontx_cpt_devices_lock);
 LIST_HEAD(octeontx_cpt_devices);
 
@@ -644,13 +641,6 @@ static int cpt_probe(struct pci_dev *pdev, const struct pci_device_id *ent)
 			goto cpt_err_unregister_interrupts;
 	}
 
-	/* Set CPT ID */
-	if (cpt->pf_type == CPT_SE_83XX)
-		cpt->node = atomic_add_return(1, &cpt_se_count);
-	else
-		cpt->node = atomic_add_return(1, &cpt_ae_count);
-	cpt->node -= 1;
-
 	INIT_LIST_HEAD(&cpt->list);
 	mutex_lock(&octeontx_cpt_devices_lock);
 	list_add(&cpt->list, &octeontx_cpt_devices);
-- 
2.14.1

