From bfd1e92c4b8d7f7e20c1ddd593a304dc35dcc153 Mon Sep 17 00:00:00 2001
From: Tirumalesh Chalamarla <tchalamarla@caviumnetworks.com>
Date: Wed, 1 Mar 2017 12:18:43 -0800
Subject: [PATCH 118/375] octeontx-mbox: PCI quirk for SSO reset

Octeontx 83xx doesn't have RSL for VFs, add a quirk to notify
sso pf when an RST was done on its VFs.

Signed-off-by: Tirumalesh Chalamarla <tchalamarla@caviumnetworks.com>
---
 drivers/pci/quirks.c | 49 +++++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 49 insertions(+)

diff --git a/drivers/pci/quirks.c b/drivers/pci/quirks.c
index 46764ad3ee41..17f7d20e9c03 100644
--- a/drivers/pci/quirks.c
+++ b/drivers/pci/quirks.c
@@ -3853,10 +3853,57 @@ static int reset_chelsio_generic_dev(struct pci_dev *dev, int probe)
 	return 0;
 }
 
+
 #define PCI_DEVICE_ID_INTEL_82599_SFP_VF   0x10ed
 #define PCI_DEVICE_ID_INTEL_IVB_M_VGA      0x0156
 #define PCI_DEVICE_ID_INTEL_IVB_M2_VGA     0x0166
 
+#define PCI_DEVICE_ID_OCTEONTX_SSO_VF	0xA04B
+#define SSO_VF_VHGRPX_PF_MBOXX(x, y)	(0x200ULL | ((x) << 20) | ((y) << 3))
+#define MBOX_TRIGGER_OOB_RESET	0x01 /* OOB reset request */
+#define MBOX_TRIGGER_OOB_RES	0x80 /* OOB response mask */
+#define MBOX_OPERATION_TIMEOUT	1000 /* set timeout 1 second */
+
+atomic_t octtx_sso_reset[64] = ATOMIC_INIT(0);
+EXPORT_SYMBOL(octtx_sso_reset);
+#define SSO_VF_ID(x) (((x) >> 20) & 0x3f)
+/*
+ * Device-specific reset method for Cavium OcteonTx SSO
+ * It will notify the PF that VF had reset. PF in turn will reset the OcteonTX
+ * domain.
+ */
+static int reset_cavium_octeon_vf(struct pci_dev *pdev, int probe)
+{
+	u64 val;
+	u64 addr;
+	int vf_id;
+	int count = 20;
+
+	dev_dbg(&pdev->dev, "reset_cavium_octeon_vf() called probe=%d\n",
+			probe);
+
+	if (probe)
+		return 0;
+
+	addr = pci_resource_start(pdev, 0);
+	vf_id = SSO_VF_ID(addr);
+	atomic_set(&octtx_sso_reset[vf_id], 1);
+	/* make sure other party reads it*/
+	mb();
+
+	while (count) {
+		usleep_range(100, 2000);
+		val = atomic_read(&octtx_sso_reset[vf_id]);
+		if (!val)
+			goto exit;
+		count--;
+	}
+	dev_err(&pdev->dev, "reset_cavium_octeon_vf() reset timeout\n");
+exit:
+	return 0;
+}
+
+
 static const struct pci_dev_reset_methods pci_dev_reset_methods[] = {
 	{ PCI_VENDOR_ID_INTEL, PCI_DEVICE_ID_INTEL_82599_SFP_VF,
 		 reset_intel_82599_sfp_virtfn },
@@ -3866,6 +3913,8 @@ static const struct pci_dev_reset_methods pci_dev_reset_methods[] = {
 		reset_ivb_igd },
 	{ PCI_VENDOR_ID_CHELSIO, PCI_ANY_ID,
 		reset_chelsio_generic_dev },
+	{ PCI_VENDOR_ID_CAVIUM, PCI_DEVICE_ID_OCTEONTX_SSO_VF,
+		reset_cavium_octeon_vf },
 	{ 0 }
 };
 
-- 
2.14.1

