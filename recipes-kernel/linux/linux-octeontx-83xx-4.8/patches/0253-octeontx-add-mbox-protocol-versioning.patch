From 7e1da4f3176c70c7c3390bd0e2829b7d5c632320 Mon Sep 17 00:00:00 2001
From: Maciej Czekaj <maciej.czekaj@cavium.com>
Date: Wed, 20 Sep 2017 16:32:07 +0200
Subject: [PATCH 253/375] octeontx: add mbox protocol versioning

Signed-off-by: Maciej Czekaj <maciej.czekaj@cavium.com>
Signed-off-by: Lukasz Bartosik <lukasz.bartosik@cavium.com>
Signed-off-by: Stanislaw Kardach <stanislaw.kardach@cavium.com>
---
 .../ethernet/cavium/octeontx-83xx/octeontx_main.c  | 64 ++++++++++++++++++----
 .../ethernet/cavium/octeontx-83xx/octeontx_mbox.c  |  2 -
 .../ethernet/cavium/octeontx-83xx/octeontx_mbox.h  | 14 +++++
 3 files changed, 68 insertions(+), 12 deletions(-)

diff --git a/drivers/net/ethernet/cavium/octeontx-83xx/octeontx_main.c b/drivers/net/ethernet/cavium/octeontx-83xx/octeontx_main.c
index be379b2c6115..ec0ee32584ef 100644
--- a/drivers/net/ethernet/cavium/octeontx-83xx/octeontx_main.c
+++ b/drivers/net/ethernet/cavium/octeontx-83xx/octeontx_main.c
@@ -310,6 +310,55 @@ void octtx_sysfs_remove(struct device *octtx_device)
 	sysfs_remove_group(&octtx_device->kobj, &octtx_attr_group);
 }
 
+static int rm_receive_message(struct octtx_domain *domain, struct mbox_hdr *hdr,
+			      union mbox_data *resp, void *mdata)
+{
+	struct mbox_intf_ver *msg = mdata;
+	u32 rm_plat, rm_maj, rm_min;
+	u32 app_plat, app_maj, app_min;
+
+	switch (hdr->msg) {
+	case RM_START_APP:
+		domain->in_use = true;
+		/* make sure it is flushed to memory because threads
+		 * using it might be running on different cores
+		 */
+		mb();
+		break;
+	case RM_INTERFACE_VERSION:
+		rm_plat = MBOX_INTERFACE_VERSION.platform;
+		rm_maj = MBOX_INTERFACE_VERSION.major;
+		rm_min = MBOX_INTERFACE_VERSION.minor;
+		app_plat = msg->platform;
+		app_maj = msg->major;
+		app_min = msg->minor;
+
+		/* RM version will be returned to APP */
+		msg->platform = rm_plat;
+		msg->major = rm_maj;
+		msg->minor = rm_min;
+		resp->data = sizeof(struct mbox_intf_ver);
+
+		if (rm_plat != app_plat ||
+		    rm_maj != app_maj ||
+		    rm_min != app_min) {
+			dev_err(octtx_device, "MBOX Interface version mismatch. APP ver is %d.%d.%d, RM ver is %d.%d.%d\n",
+				app_plat, app_maj, app_min,
+				rm_plat, rm_maj, rm_min);
+			break;
+		}
+		break;
+	default:
+		goto err;
+	}
+
+	hdr->res_code = MBOX_RET_SUCCESS;
+	return 0;
+err:
+	hdr->res_code = MBOX_RET_INVALID;
+	return -EINVAL;
+}
+
 static int octtx_master_receive_message(struct mbox_hdr *hdr,
 					union mbox_data *req,
 					union mbox_data *resp,
@@ -362,15 +411,8 @@ static int octtx_master_receive_message(struct mbox_hdr *hdr,
 				       req, resp, add_data);
 		break;
 	case NO_COPROC:
-		if (hdr->msg == RM_START_APP) {
-			domain->in_use = true;
-			/* make sure it is flushed to memory because threads
-			 * using it might be running on different cores
-			 */
-			mb();
-			hdr->res_code = MBOX_RET_SUCCESS;
-			break;
-		}
+		rm_receive_message(domain, hdr, resp, add_data);
+		break;
 	case SSOW_COPROC:
 	default:
 		dev_err(octtx_device, "invalid mbox message\n");
@@ -1246,7 +1288,9 @@ static int __init octeontx_init_module(void)
 {
 	int ret;
 
-	pr_info("%s, ver %s\n", DRV_NAME, DRV_VERSION);
+	pr_info("%s, ver %s, MBOX IF ver %d.%d.%d\n", DRV_NAME, DRV_VERSION,
+		MBOX_INTERFACE_VERSION.platform, MBOX_INTERFACE_VERSION.major,
+		MBOX_INTERFACE_VERSION.minor);
 
 	bgx = bgx_octeontx_init();
 	if (!bgx)
diff --git a/drivers/net/ethernet/cavium/octeontx-83xx/octeontx_mbox.c b/drivers/net/ethernet/cavium/octeontx-83xx/octeontx_mbox.c
index 33e78e6c683b..4ae250085eb7 100644
--- a/drivers/net/ethernet/cavium/octeontx-83xx/octeontx_mbox.c
+++ b/drivers/net/ethernet/cavium/octeontx-83xx/octeontx_mbox.c
@@ -28,8 +28,6 @@ typedef enum {
 	MBOX_CHAN_PARTY = 1, /* channel which other party control */
 } mbox_chan_t;
 
-#define MBOX_VERSION 0x010000 /* 1.0.0 */
-
 /* macro return proper channel index depending on which channel we control and
  * if we TX/RX
  */
diff --git a/drivers/net/ethernet/cavium/octeontx-83xx/octeontx_mbox.h b/drivers/net/ethernet/cavium/octeontx-83xx/octeontx_mbox.h
index 385884fff6b6..19b3cde906f9 100644
--- a/drivers/net/ethernet/cavium/octeontx-83xx/octeontx_mbox.h
+++ b/drivers/net/ethernet/cavium/octeontx-83xx/octeontx_mbox.h
@@ -50,6 +50,7 @@ enum coproc_t {
 #define DPI_GET_REG_CFG 0x4
 
 #define RM_START_APP		0x1
+#define RM_INTERFACE_VERSION	0x2
 
 /*resp messages*/
 #define MBOX_RET_SUCCESS	0x0
@@ -256,6 +257,19 @@ struct mbox_ssow_identify {
 	u16	subdomain_id;
 };
 
+/* MBOX interface version message */
+struct mbox_intf_ver {
+	u32	platform:12;
+	u32	major:10;
+	u32	minor:10;
+};
+
+static const struct mbox_intf_ver MBOX_INTERFACE_VERSION = {
+	.platform = 0x01,
+	.major = 0x00,
+	.minor = 0x00
+};
+
 /* FIXME: This union is temporary until we agree to move all messages to RAM */
 union mbox_data {
 	u64			data;
-- 
2.14.1

