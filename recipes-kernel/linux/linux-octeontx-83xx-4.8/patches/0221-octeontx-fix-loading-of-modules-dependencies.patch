From 4f15fa3723afb7b69c5df30090c6ec6665786ed5 Mon Sep 17 00:00:00 2001
From: Lukasz Bartosik <lb@semihalf.com>
Date: Mon, 31 Jul 2017 17:29:11 +0200
Subject: [PATCH 221/375] octeontx: fix loading of modules dependencies

To load dependent modules try_then_request_module was called from
probe function of a given module which could lead to a deadlock.
To fix the issue try_then_request_module calls were moved to
modules init functions.

Signed-off-by: Lukasz Bartosik <lb@semihalf.com>
Reviewed-by: Stanislaw Kardach <kda@semihalf.com>
---
 .../net/ethernet/cavium/octeontx-83xx/lbk_main.c   | 12 +++-----
 .../net/ethernet/cavium/octeontx-83xx/pkopf_main.c | 23 +++++++-------
 .../net/ethernet/cavium/octeontx-83xx/ssopf_main.c | 36 ++++++++++++----------
 .../net/ethernet/cavium/octeontx-83xx/timpf_main.c |  9 +++---
 4 files changed, 38 insertions(+), 42 deletions(-)

diff --git a/drivers/net/ethernet/cavium/octeontx-83xx/lbk_main.c b/drivers/net/ethernet/cavium/octeontx-83xx/lbk_main.c
index 2aa3ce813f77..319b952dee92 100644
--- a/drivers/net/ethernet/cavium/octeontx-83xx/lbk_main.c
+++ b/drivers/net/ethernet/cavium/octeontx-83xx/lbk_main.c
@@ -433,13 +433,6 @@ static int lbk_probe(struct pci_dev *pdev, const struct pci_device_id *ent)
 	u64 ioaddr;
 	int err, node;
 
-	/* Setup interface with NIC driver */
-	thlbk = try_then_request_module(symbol_get(thunder_lbk_com), "nicpf");
-	if (!thlbk) {
-		dev_err(dev, "Error thunder_lbk_com symbol not found");
-		return -ENODEV;
-	}
-
 	/* Setup LBK Device */
 	lbk = devm_kzalloc(dev, sizeof(*lbk), GFP_KERNEL);
 	if (!lbk)
@@ -522,7 +515,6 @@ static void lbk_remove(struct pci_dev *pdev)
 		}
 	}
 	spin_unlock(&octeontx_lbk_lock);
-	symbol_put(thunder_lbk_com);
 }
 
 static const struct pci_device_id lbk_id_table[] = {
@@ -546,6 +538,9 @@ MODULE_DEVICE_TABLE(pci, lbk_id_table);
 static int __init lbk_init_module(void)
 {
 	pr_info("%s, ver %s\n", DRV_NAME, DRV_VERSION);
+	thlbk = try_then_request_module(symbol_get(thunder_lbk_com), "nicpf");
+	if (!thlbk)
+		return -ENODEV;
 
 	return pci_register_driver(&lbk_driver);
 }
@@ -553,6 +548,7 @@ static int __init lbk_init_module(void)
 static void __exit lbk_cleanup_module(void)
 {
 	pci_unregister_driver(&lbk_driver);
+	symbol_put(thunder_lbk_com);
 }
 
 module_init(lbk_init_module);
diff --git a/drivers/net/ethernet/cavium/octeontx-83xx/pkopf_main.c b/drivers/net/ethernet/cavium/octeontx-83xx/pkopf_main.c
index 9cb3e83774e0..12487d6ed6bd 100644
--- a/drivers/net/ethernet/cavium/octeontx-83xx/pkopf_main.c
+++ b/drivers/net/ethernet/cavium/octeontx-83xx/pkopf_main.c
@@ -934,10 +934,6 @@ static int setup_dpfi(struct pkopf *pko)
 	int retry = 0;
 	u64 reg;
 
-	fpapf = try_then_request_module(symbol_get(fpapf_com), "fpapf");
-	if (!fpapf)
-		return -ENODEV;
-
 	err = fpapf->create_domain(pko->id, FPA_PKO_DPFI_GMID, 1, NULL, NULL);
 	if (!err) {
 		dev_err(&pko->pdev->dev, "failed to create PKO_DPFI_DOMAIN\n");
@@ -945,12 +941,6 @@ static int setup_dpfi(struct pkopf *pko)
 		return -ENODEV;
 	}
 
-	fpavf = try_then_request_module(symbol_get(fpavf_com), "fpavf");
-	if (!fpavf) {
-		symbol_put(fpapf_com);
-		return -ENODEV;
-	}
-
 	fpa = fpavf->get(FPA_PKO_DPFI_GMID, 0, &pko_master_com, pko);
 	if (!fpa) {
 		dev_err(&pko->pdev->dev, "failed to get fpavf\n");
@@ -1185,8 +1175,6 @@ static void pko_remove(struct pci_dev *pdev)
 
 	pko_disable(pko);
 	teardown_dpfi(pko);
-	symbol_put(fpavf_com);
-	symbol_put(fpapf_com);
 	pko_irq_free(pko);
 	pko_sriov_configure(pdev, 0);
 }
@@ -1214,6 +1202,15 @@ MODULE_DEVICE_TABLE(pci, pko_id_table);
 static int __init pko_init_module(void)
 {
 	pr_info("%s, ver %s\n", DRV_NAME, DRV_VERSION);
+	fpapf = try_then_request_module(symbol_get(fpapf_com), "fpapf");
+	if (!fpapf)
+		return -ENODEV;
+
+	fpavf = try_then_request_module(symbol_get(fpavf_com), "fpavf");
+	if (!fpavf) {
+		symbol_put(fpapf_com);
+		return -ENODEV;
+	}
 
 	return pci_register_driver(&pko_driver);
 }
@@ -1221,6 +1218,8 @@ static int __init pko_init_module(void)
 static void __exit pko_cleanup_module(void)
 {
 	pci_unregister_driver(&pko_driver);
+	symbol_put(fpapf_com);
+	symbol_put(fpavf_com);
 }
 
 module_init(pko_init_module);
diff --git a/drivers/net/ethernet/cavium/octeontx-83xx/ssopf_main.c b/drivers/net/ethernet/cavium/octeontx-83xx/ssopf_main.c
index c0946fdb30b7..dbcd05a3e61c 100644
--- a/drivers/net/ethernet/cavium/octeontx-83xx/ssopf_main.c
+++ b/drivers/net/ethernet/cavium/octeontx-83xx/ssopf_main.c
@@ -1119,14 +1119,6 @@ static int sso_init(struct ssopf *sso)
 
 	sso->xaq_buf_size = xaq_buf_size;
 
-	rst = try_then_request_module(symbol_get(rst_com), "rst");
-	if (!rst)
-		return -ENODEV;
-
-	fpapf = try_then_request_module(symbol_get(fpapf_com), "fpapf");
-	if (!fpapf)
-		return -ENODEV;
-
 	err = fpapf->create_domain(sso->id, FPA_SSO_XAQ_GMID, 1, NULL, NULL);
 	if (!err) {
 		dev_err(&sso->pdev->dev, "failed to create SSO_XAQ_DOMAIN\n");
@@ -1134,12 +1126,6 @@ static int sso_init(struct ssopf *sso)
 		return -ENODEV;
 	}
 
-	fpavf = try_then_request_module(symbol_get(fpavf_com), "fpavf");
-	if (!fpavf) {
-		symbol_put(fpapf_com);
-		return -ENODEV;
-	}
-
 	fpa = fpavf->get(FPA_SSO_XAQ_GMID, 0, &sso_master_com, sso);
 	if (!fpa) {
 		dev_err(&sso->pdev->dev, "failed to get fpavf\n");
@@ -1339,9 +1325,6 @@ static void sso_remove(struct pci_dev *pdev)
 	}
 	fpavf->teardown(fpa);
 	fpapf->destroy_domain(sso->id, FPA_SSO_XAQ_GMID, NULL, NULL);
-	symbol_put(fpapf_com);
-	symbol_put(fpavf_com);
-	symbol_put(rst_com);
 	sso_irq_free(sso);
 	sso_sriov_configure(pdev, 0);
 	sso_fini(sso);
@@ -1379,6 +1362,22 @@ MODULE_DEVICE_TABLE(pci, sso_id_table);
 static int __init sso_init_module(void)
 {
 	pr_info("%s, ver %s\n", DRV_NAME, DRV_VERSION);
+	rst = try_then_request_module(symbol_get(rst_com), "rst");
+	if (!rst)
+		return -ENODEV;
+
+	fpapf = try_then_request_module(symbol_get(fpapf_com), "fpapf");
+	if (!fpapf) {
+		symbol_put(rst);
+		return -ENODEV;
+	}
+
+	fpavf = try_then_request_module(symbol_get(fpavf_com), "fpavf");
+	if (!fpavf) {
+		symbol_put(rst);
+		symbol_put(fpapf_com);
+		return -ENODEV;
+	}
 
 	return pci_register_driver(&sso_driver);
 }
@@ -1386,6 +1385,9 @@ static int __init sso_init_module(void)
 static void __exit sso_cleanup_module(void)
 {
 	pci_unregister_driver(&sso_driver);
+	symbol_put(rst_com);
+	symbol_put(fpapf_com);
+	symbol_put(fpavf_com);
 }
 
 module_init(sso_init_module);
diff --git a/drivers/net/ethernet/cavium/octeontx-83xx/timpf_main.c b/drivers/net/ethernet/cavium/octeontx-83xx/timpf_main.c
index 2b819628b23f..7340ea4574a4 100644
--- a/drivers/net/ethernet/cavium/octeontx-83xx/timpf_main.c
+++ b/drivers/net/ethernet/cavium/octeontx-83xx/timpf_main.c
@@ -625,10 +625,6 @@ static int tim_probe(struct pci_dev *pdev, const struct pci_device_id *ent)
 	struct timpf *tim;
 	int err = -ENOMEM;
 
-	rst = try_then_request_module(symbol_get(rst_com), "rst");
-	if (!rst)
-		return -ENODEV;
-
 	tim = devm_kzalloc(dev, sizeof(*tim), GFP_KERNEL);
 	if (!tim)
 		return -ENOMEM;
@@ -689,7 +685,6 @@ static void tim_remove(struct pci_dev *pdev)
 	}
 	spin_unlock(&octeontx_tim_dev_lock);
 
-	symbol_put(rst_com);
 	tim_irq_free(tim);
 	tim_sriov_configure(pdev, 0);
 }
@@ -716,6 +711,9 @@ MODULE_DEVICE_TABLE(pci, tim_id_table);
 static int __init tim_init_module(void)
 {
 	pr_info("%s, ver %s\n", DRV_NAME, DRV_VERSION);
+	rst = try_then_request_module(symbol_get(rst_com), "rst");
+	if (!rst)
+		return -ENODEV;
 
 	return pci_register_driver(&tim_driver);
 }
@@ -723,6 +721,7 @@ static int __init tim_init_module(void)
 static void __exit tim_cleanup_module(void)
 {
 	pci_unregister_driver(&tim_driver);
+	symbol_put(rst_com);
 }
 
 module_init(tim_init_module);
-- 
2.14.1

