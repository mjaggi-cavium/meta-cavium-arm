From 9fe924ec07b7c51897d037df55c8f1b1194a9130 Mon Sep 17 00:00:00 2001
From: Sascha Hauer <s.hauer@pengutronix.de>
Date: Thu, 15 Sep 2016 10:32:48 +0200
Subject: [PATCH 310/375] mtd: nand: Add function to convert ONFI mode to
 data_interface

onfi_init_data_interface() initializes a data interface with
values from a given ONFI mode.

Signed-off-by: Sascha Hauer <s.hauer@pengutronix.de>
Signed-off-by: Boris Brezillon <boris.brezillon@free-electrons.com>
Signed-off-by: Peter Swain <peter.swain@cavium.com>
---
 drivers/mtd/nand/nand_timings.c | 24 +++++++++++++++++++++---
 include/linux/mtd/nand.h        |  7 ++++++-
 2 files changed, 27 insertions(+), 4 deletions(-)

diff --git a/drivers/mtd/nand/nand_timings.c b/drivers/mtd/nand/nand_timings.c
index d346e411b5e2..f139009e208c 100644
--- a/drivers/mtd/nand/nand_timings.c
+++ b/drivers/mtd/nand/nand_timings.c
@@ -13,9 +13,11 @@
 #include <linux/export.h>
 #include <linux/mtd/nand.h>
 
-static const struct nand_sdr_timings onfi_sdr_timings[] = {
+static const struct nand_data_interface onfi_sdr_timings[] = {
 	/* Mode 0 */
 	{
+	    .type = NAND_SDR_IFACE,
+	    .timings.sdr = {
 		.tADL_min = 200000,
 		.tALH_min = 20000,
 		.tALS_min = 50000,
@@ -50,9 +52,12 @@ static const struct nand_sdr_timings onfi_sdr_timings[] = {
 		.tWHR_min = 120000,
 		.tWP_min = 50000,
 		.tWW_min = 100000,
+	    },
 	},
 	/* Mode 1 */
 	{
+	    .type = NAND_SDR_IFACE,
+	    .timings.sdr = {
 		.tADL_min = 100000,
 		.tALH_min = 10000,
 		.tALS_min = 25000,
@@ -87,9 +92,12 @@ static const struct nand_sdr_timings onfi_sdr_timings[] = {
 		.tWHR_min = 80000,
 		.tWP_min = 25000,
 		.tWW_min = 100000,
+	    },
 	},
 	/* Mode 2 */
 	{
+	    .type = NAND_SDR_IFACE,
+	    .timings.sdr = {
 		.tADL_min = 100000,
 		.tALH_min = 10000,
 		.tALS_min = 15000,
@@ -124,9 +132,12 @@ static const struct nand_sdr_timings onfi_sdr_timings[] = {
 		.tWHR_min = 80000,
 		.tWP_min = 17000,
 		.tWW_min = 100000,
+	    },
 	},
 	/* Mode 3 */
 	{
+	    .type = NAND_SDR_IFACE,
+	    .timings.sdr = {
 		.tADL_min = 100000,
 		.tALH_min = 5000,
 		.tALS_min = 10000,
@@ -161,9 +172,12 @@ static const struct nand_sdr_timings onfi_sdr_timings[] = {
 		.tWHR_min = 80000,
 		.tWP_min = 15000,
 		.tWW_min = 100000,
+	    },
 	},
 	/* Mode 4 */
 	{
+	    .type = NAND_SDR_IFACE,
+	    .timings.sdr = {
 		.tADL_min = 70000,
 		.tALH_min = 5000,
 		.tALS_min = 10000,
@@ -198,9 +212,12 @@ static const struct nand_sdr_timings onfi_sdr_timings[] = {
 		.tWHR_min = 80000,
 		.tWP_min = 12000,
 		.tWW_min = 100000,
+	    },
 	},
 	/* Mode 5 */
 	{
+	    .type = NAND_SDR_IFACE,
+	    .timings.sdr = {
 		.tADL_min = 70000,
 		.tALH_min = 5000,
 		.tALS_min = 10000,
@@ -235,6 +252,7 @@ static const struct nand_sdr_timings onfi_sdr_timings[] = {
 		.tWHR_min = 80000,
 		.tWP_min = 10000,
 		.tWW_min = 100000,
+	    },
 	},
 };
 
@@ -248,7 +266,7 @@ const struct nand_sdr_timings *onfi_async_timing_mode_to_sdr_timings(int mode)
 	if (mode < 0 || mode >= ARRAY_SIZE(onfi_sdr_timings))
 		return ERR_PTR(-EINVAL);
 
-	return &onfi_sdr_timings[mode];
+	return &onfi_sdr_timings[mode].timings.sdr;
 }
 EXPORT_SYMBOL(onfi_async_timing_mode_to_sdr_timings);
 
@@ -263,7 +281,7 @@ int onfi_init_data_interface(struct nand_chip *chip,
 			     enum nand_data_interface_type type,
 			     int timing_mode)
 {
-	if (type != NAND_SDR_IFACE)
+	 if (type != NAND_SDR_IFACE)
 		return -EINVAL;
 
 	if (timing_mode < 0 || timing_mode >= ARRAY_SIZE(onfi_sdr_timings))
diff --git a/include/linux/mtd/nand.h b/include/linux/mtd/nand.h
index cb40925f31cf..651d73896977 100644
--- a/include/linux/mtd/nand.h
+++ b/include/linux/mtd/nand.h
@@ -1124,6 +1124,11 @@ static inline int onfi_get_sync_timing_mode(struct nand_chip *chip)
 	return le16_to_cpu(chip->onfi_params.src_sync_timing_mode);
 }
 
+int onfi_init_data_interface(struct nand_chip *chip,
+			     struct nand_data_interface *iface,
+			     enum nand_data_interface_type type,
+			     int timing_mode);
+
 /*
  * Check if it is a SLC nand.
  * The !nand_is_slc() can be used to check the MLC/TLC nand chips.
@@ -1189,7 +1194,7 @@ int nand_onfi_get_set_features_notsupp(struct mtd_info *mtd,
 				       u8 *subfeature_param);
 
 /* Reset and initialize a NAND device */
-int nand_reset(struct nand_chip *chip, int chipnr);
+int nand_reset(struct nand_chip *chip);
 
 /* Free resources held by the NAND device */
 void nand_cleanup(struct nand_chip *chip);
-- 
2.14.1

