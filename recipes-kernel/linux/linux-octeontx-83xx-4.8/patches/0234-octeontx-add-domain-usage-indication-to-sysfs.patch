From 38d3094ad3ffd55ec308d6d36b3efa6bd586c58f Mon Sep 17 00:00:00 2001
From: Lukasz Bartosik <lb@semihalf.com>
Date: Thu, 24 Aug 2017 13:33:23 +0200
Subject: [PATCH 234/375] octeontx: add domain usage indication to sysfs

Add domain_in_use entry to sysfs which will indicate wheteher given
domain is being used by an application.

Signed-off-by: Lukasz Bartosik <lb@semihalf.com>
---
 .../ethernet/cavium/octeontx-83xx/octeontx_main.c  | 30 +++++++++++++++++++++-
 1 file changed, 29 insertions(+), 1 deletion(-)

diff --git a/drivers/net/ethernet/cavium/octeontx-83xx/octeontx_main.c b/drivers/net/ethernet/cavium/octeontx-83xx/octeontx_main.c
index bccfcc12a1f1..6d59191d29e7 100644
--- a/drivers/net/ethernet/cavium/octeontx-83xx/octeontx_main.c
+++ b/drivers/net/ethernet/cavium/octeontx-83xx/octeontx_main.c
@@ -93,7 +93,9 @@ struct octtx_domain {
 	struct kobject *kobj;
 	struct kobject *ports_kobj;
 	struct device_attribute sysfs_domain_id;
+	struct device_attribute sysfs_domain_in_use;
 	bool sysfs_domain_id_created;
+	bool sysfs_domain_in_use_created;
 
 	bool fpa_domain_created;
 	bool ssow_domain_created;
@@ -512,6 +514,9 @@ static void do_destroy_domain(struct octtx_domain *domain)
 	if (domain->sysfs_domain_id_created)
 		sysfs_remove_file(domain->kobj, &domain->sysfs_domain_id.attr);
 
+	if (domain->sysfs_domain_in_use_created)
+		sysfs_remove_file(domain->kobj,
+				  &domain->sysfs_domain_in_use.attr);
 	if (domain->kobj)
 		kobject_del(domain->kobj);
 }
@@ -527,6 +532,17 @@ static ssize_t octtx_domain_id_show(struct device *dev,
 	return snprintf(buf, PAGE_SIZE, "%d\n", domain->domain_id);
 }
 
+static ssize_t octtx_domain_in_use_show(struct device *dev,
+					struct device_attribute *attr,
+					char *buf)
+{
+	struct octtx_domain *domain;
+
+	domain = container_of(attr, struct octtx_domain, sysfs_domain_in_use);
+
+	return snprintf(buf, PAGE_SIZE, "%d\n", domain->in_use);
+}
+
 int octeontx_create_domain(const char *name, int type, int sso_count,
 			   int fpa_count, int ssow_count, int pko_count,
 			   int pki_count, int tim_count, int bgx_count,
@@ -801,11 +817,23 @@ int octeontx_create_domain(const char *name, int type, int sso_count,
 	sysfs_attr_init(&domain->sysfs_domain_id.attr);
 	ret = sysfs_create_file(domain->kobj, &domain->sysfs_domain_id.attr);
 	if (ret) {
-		dev_err(octtx_device, " create_domain sysfs failed\n");
+		dev_err(octtx_device, " domain_id sysfs failed\n");
 		goto error;
 	}
 	domain->sysfs_domain_id_created = true;
 
+	domain->sysfs_domain_in_use.show = octtx_domain_in_use_show;
+	domain->sysfs_domain_in_use.attr.name = "domain_in_use";
+	domain->sysfs_domain_in_use.attr.mode = 0444;
+	sysfs_attr_init(&domain->sysfs_domain_in_use.attr);
+	ret = sysfs_create_file(domain->kobj,
+				&domain->sysfs_domain_in_use.attr);
+	if (ret) {
+		dev_err(octtx_device, " domain_in_use sysfs failed\n");
+		goto error;
+	}
+	domain->sysfs_domain_in_use_created = true;
+
 	spin_lock(&octeontx_domains_lock);
 	INIT_LIST_HEAD(&domain->list);
 	list_add(&domain->list, &octeontx_domains);
-- 
2.14.1

