From e8c36609d9ff79e3c8394fb4d3e98412eb723ebd Mon Sep 17 00:00:00 2001
From: Sunil Goutham <sgoutham@cavium.com>
Date: Wed, 20 Sep 2017 16:18:01 +0530
Subject: [PATCH 185/375] net: thunderx: Fix pkind maxlen miscalculation upon
 ptp enable

When ptp enable alone is done multiple times, then max
packet length in pkind is unnecessarily incremented.
This patch fixes that by not updating maxlen if ptp
is already enabled.

Signed-off-by: Sunil Goutham <sgoutham@cavium.com>
---
 drivers/net/ethernet/cavium/thunder/nic_main.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/drivers/net/ethernet/cavium/thunder/nic_main.c b/drivers/net/ethernet/cavium/thunder/nic_main.c
index 5e8b30f539d1..076bb756d692 100644
--- a/drivers/net/ethernet/cavium/thunder/nic_main.c
+++ b/drivers/net/ethernet/cavium/thunder/nic_main.c
@@ -1080,7 +1080,7 @@ static void nic_config_timestamp(struct nicpf *nic, int vf, struct set_ptp *ptp)
 	pkind_val = nic_reg_read(nic, NIC_PF_PKIND_0_15_CFG | (pkind_idx << 3));
 	pkind = (struct pkind_cfg *)&pkind_val;
 
-	if (ptp->enable) {
+	if (ptp->enable && !pkind->hdr_sl) {
 		/* Skiplen to exclude 8byte timestamp while parsing pkt
 		 * If not configured, will result in L2 errors.
 		 */
@@ -1091,7 +1091,7 @@ static void nic_config_timestamp(struct nicpf *nic, int vf, struct set_ptp *ptp)
 		nic_reg_write(nic,
 			      NIC_PF_RX_ETYPE_0_7 | (1 << 3),
 			      (ETYPE_ALG_ENDPARSE << 16) | ETH_P_1588);
-	} else {
+	} else if (!ptp->enable && pkind->hdr_sl) {
 		pkind->maxlen -= (pkind->hdr_sl * 2);
 		pkind->hdr_sl = 0;
 		bgx_config_timestamping(nic->node, bgx_idx, lmac, false);
-- 
2.14.1

