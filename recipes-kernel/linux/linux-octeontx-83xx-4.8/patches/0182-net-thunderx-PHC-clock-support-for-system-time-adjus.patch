From 6cf80e2d0bec4aa129e9b1e6d8a2a99102f37980 Mon Sep 17 00:00:00 2001
From: Sunil Goutham <sgoutham@cavium.com>
Date: Mon, 3 Jul 2017 12:47:12 +0530
Subject: [PATCH 182/375] net: thunderx: PHC clock support for system time
 adjustment

Uses clock exposed by Thunder PTP driver to support PHC clock.
Thus supports PHC clock and time adjustments in a PTP master/slave
setup.

Signed-off-by: Sunil Goutham <sgoutham@cavium.com>
---
 drivers/net/ethernet/cavium/thunder/nicvf_ethtool.c | 8 +++++++-
 drivers/net/ethernet/cavium/thunder/nicvf_main.c    | 6 ++++--
 2 files changed, 11 insertions(+), 3 deletions(-)

diff --git a/drivers/net/ethernet/cavium/thunder/nicvf_ethtool.c b/drivers/net/ethernet/cavium/thunder/nicvf_ethtool.c
index a5e1111f9db6..e257ebeff114 100644
--- a/drivers/net/ethernet/cavium/thunder/nicvf_ethtool.c
+++ b/drivers/net/ethernet/cavium/thunder/nicvf_ethtool.c
@@ -16,6 +16,7 @@
 #include "nicvf_queues.h"
 #include "q_struct.h"
 #include "thunder_bgx.h"
+#include "../drivers/ptp/cavium_ptp.h"
 
 #define DRV_NAME	"thunder-nicvf"
 #define DRV_VERSION     "1.0"
@@ -814,7 +815,12 @@ static int nicvf_get_ts_info(struct net_device *netdev,
 				SOF_TIMESTAMPING_TX_HARDWARE |
 				SOF_TIMESTAMPING_RX_HARDWARE |
 				SOF_TIMESTAMPING_RAW_HARDWARE;
-	info->phc_index = -1;
+
+	if (thunder_ptp_clock && thunder_ptp_clock->cavium_ptp_clock)
+		info->phc_index = ptp_clock_index(
+				thunder_ptp_clock->cavium_ptp_clock->ptp_clock);
+	else
+		info->phc_index = -1;
 
 	info->tx_types = (1 << HWTSTAMP_TX_OFF) | (1 << HWTSTAMP_TX_ON);
 
diff --git a/drivers/net/ethernet/cavium/thunder/nicvf_main.c b/drivers/net/ethernet/cavium/thunder/nicvf_main.c
index cfa334546cbe..aa29be8ca8a9 100644
--- a/drivers/net/ethernet/cavium/thunder/nicvf_main.c
+++ b/drivers/net/ethernet/cavium/thunder/nicvf_main.c
@@ -23,6 +23,7 @@
 #include "nic.h"
 #include "nicvf_queues.h"
 #include "thunder_bgx.h"
+#include "../drivers/ptp/cavium_ptp.h"
 
 #define DRV_NAME	"thunder-nicvf"
 #define DRV_VERSION	"1.0"
@@ -521,7 +522,8 @@ static void nicvf_snd_ptp_handler(struct net_device *netdev,
 
 	/* Get the timestamp */
 	memset(&ts, 0, sizeof(ts));
-	ts.hwtstamp = ns_to_ktime(cqe_tx->ptp_timestamp);
+	ts.hwtstamp = ns_to_ktime(cqe_tx->ptp_timestamp +
+				  thunder_get_adjtime());
 	skb_tstamp_tx(nic->ptp_skb, &ts);
 
 no_tstamp:
@@ -624,7 +626,7 @@ static inline void nicvf_set_rxtstamp(struct nicvf *nic, struct sk_buff *skb)
 
 	/* The first 8 bytes is the timestamp */
 	ns = be64_to_cpu(*(u64 *)skb->data);
-	skb_hwtstamps(skb)->hwtstamp = ns_to_ktime(ns);
+	skb_hwtstamps(skb)->hwtstamp = ns_to_ktime(ns + thunder_get_adjtime());
 	__skb_pull(skb, 8);
 }
 
-- 
2.14.1

